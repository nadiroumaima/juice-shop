name: "CI/CD Pipelines"
on:
  push:
    branches-ignore:
      - l10n_develop
      - gh-pages
    paths-ignore:
      - '*.md'
      - 'LICENSE'
      - 'monitoring/grafana-dashboard.json'
      - 'screenshots/**'
    tags-ignore:
      - '*'
  pull_request:
    paths-ignore:
      - '*.md'
      - 'LICENSE'
      - 'data/static/i18n/*.json'
      - 'frontend/src/assets/i18n/*.json'
  
  workflow_dispatch:

env:
  NODE_DEFAULT_VERSION: 20
  ANGULAR_CLI_VERSION: 17
  CYCLONEDX_NPM_VERSION: '^1.12.0'

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    steps:
      - name: "Check out Git repository"
        uses: actions/checkout@v3

      - name: "Use Node.js 18"
        uses: actions/setup-node@v3
        with:
          node-version: 18

  Snyk:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: "Install dependencies"
        run: npm install
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}    

  sonarqube:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    steps:
    - name: Checking out
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'temurin'
    - name: Verify Java version
      run: java -version
      

    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@v2
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      with:
        args: >
          -Dsonar.projectKey=nadiroumaima_juice-shop
          -Dsonar.organization=nadiroumaima
          -Dsonar.sources=.
          -Dsonar.host.url=https://sonarcloud.io
          -X
  


  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Login to Docker registry
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}  
          password: ${{ secrets.DOCKER_TOKEN }}     

      - name: Build Docker image
        run: |
            docker build -t oumaima1702/test-content-nginx:latest .
  
      - name: Push Docker image
        run: |
            docker push oumaima1702/test-content-nginx:latest
  run_container_and_dast:
    runs-on: ubuntu-latest
    needs: build
    name: Run Application Container and Perform DAST
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Pull Docker image
        run: |
          docker pull oumaima1702/test-content-nginx:latest

      - name: Run Application Container
        run: |
          docker run -d --name test-app -p 8080:80 oumaima1702/test-content-nginx:latest
          sleep 30 

      - name: ZAP Full Scan
        uses: zaproxy/action-full-scan@v0.12.0
        with:
          target: 'http://localhost:8080'
          rules_file_name: '.zap/rules.js'
          report: true
     