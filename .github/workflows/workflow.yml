name: "CI/CD Pipelines"
on:
  push:
    branches:
      - master
  workflow_dispatch:

permissions:
  contents: write
  issues: write
  security-events: write

  
  



jobs:


  snyk_scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: "Install dependencies"
        run: npm install
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --sarif-file-output=snyk-results.sarif  

  sonarqube:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    steps:
    - name: Checking out
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'temurin'
    - name: Verify Java version
      run: java -version
      

    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@v2
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      with:
        args: >
          -Dsonar.projectKey=nadiroumaima_juice-shop
          -Dsonar.organization=nadiroumaima
          -Dsonar.sources=.
          -Dsonar.host.url=https://sonarcloud.io
          -X
  


  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Login to Docker registry
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}  
          password: ${{ secrets.DOCKER_TOKEN }}     

      - name: Build Docker image
        run: |
            docker build -t oumaima1702/test-content-nginx:latest .
  
      - name: Push Docker image
        run: |
            docker push oumaima1702/test-content-nginx:latest
  zap_scan_dast:
    runs-on: ubuntu-latest
    needs: build
    name: Run Application Container and Perform DAST
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Pull Docker image
        run: |
          docker pull oumaima1702/test-content-nginx:latest
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Run Application Container
        run: |
          docker run -d --name test-app -p 8081:80 oumaima1702/test-content-nginx:latest
          until curl -s http://localhost:8081 > /dev/null; do
            echo "Waiting for the application to start..."
            sleep 5
          done
          echo "Application started successfully!"
      - name: Run OWASP ZAP Scan
        uses: zaproxy/action-full-scan@v0.12.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          docker_name: 'ghcr.io/zaproxy/zaproxy:stable'
          target: 'http://localhost:8081'
          rules_file_name: '.zap/rules.tsv'
          cmd_options: '-a -d -x dast-scan-results.xml -I'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Stop and remove Docker container
        if: always()
        run: |
            docker stop test-app || true
            docker rm test-app || true